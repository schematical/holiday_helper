{
  "name": "modella-validators",
  "version": "0.0.9",
  "description": "Validators for Modella",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:modella/validators.git"
  },
  "keywords": [
    "modella",
    "validators",
    "validations"
  ],
  "author": {
    "name": "Ryan Schmukler"
  },
  "license": "MIT",
  "dependencies": {
    "modella": ">=0.1.0"
  },
  "devDependencies": {
    "expect.js": "*",
    "modella-mongo": "*"
  },
  "readme": "# Model Validators\n\nA plugin that provides a bunch of validators for\n[modella](https://github.com/modella/modella).\n\n## Example Usage\n\n    var Person = modella('Person').attr('name', { required: true }),\n        validation = require('modella-validators');\n        \n    Person.use(validation);\n    \n\n## Basic Validators\n\n### Required\n\nVerifies that a field is present.\n\n    var User = User.attr('username', {required: true});\n\n### Confirms\n\nVerifies that a field equals another field.\n\n    var User = User.attr('password')\n                   .attr('passwordConfirmation', { confirms: 'password' });\n\n### Type\n\nChecks that a field is of a given type\n\n    var User = User.attr('name', {type: 'string'});\n\n## Format Validators\n\nVerify the value of a field against a regex pattern. `modella-validators`\ncomes with a few regex strings built in under the `formatStrings`\nobject.\n\n### Format\n\nValidates the field against the given regular expression\n\n    var User = User.attr('name', {format: /\\w+ \\w+/ });\n\n### Phone Number\n\nValidates the field against a (North American) phone number format\n\n    var User = User.attr('phone', {format: 'phone' });\n\n\n### Email Address\n\nValidates the field against a email address format\n\n    var User = User.attr('email', {format: 'email' });\n\n### URL\n\nValidates the field against a URL format\n\n    var User = User.attr('website', {format: 'url' });\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/modella/validators/issues"
  },
  "_id": "modella-validators@0.0.9",
  "dist": {
    "shasum": "cd8af5d7e1a400b80c1430b0d55dd2f7932e959f"
  },
  "_from": "modella-validators@*",
  "_resolved": "https://registry.npmjs.org/modella-validators/-/modella-validators-0.0.9.tgz"
}
